@model RecipeSiteAspNet.Models.Recipe;
@using Microsoft.AspNetCore.Identity;
@using RecipeSiteAspNet.Areas.Identity.Data;
@using RecipeSiteAspNet.Models;
@inject UserManager<RecipeSiteUser> UserManager


<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
    </symbol>
    <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
    </symbol>
</svg>


<!-- Модальное окно -->
<div class="modal fade" id="infoModal" tabindex="-1" aria-labelledby="infoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body d-flex align-items-center">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:"><use xlink:href="#check-circle-fill" /></svg>
                <p class="h5" id="infoModalText"></p>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteYesNoModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body d-flex align-items-center">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                <p class="h5">Вы действително хотите удалить шаг?</p>
            </div>
            <div class="modal-footer">
                <button id="btnYesConfirmYesNo" class="btn btn-danger">Да</button>
                <button id="btnNoConfirmYesNo" class="btn btn-primary">Нет</button>
            </div>
        </div>
    </div>
</div>



<div class="m-auto mb-3 p-3 div-right">
    <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseRedactor" aria-expanded="false" aria-controls="collapseExample">
        Показать редактор рецепта
    </button>
    <a class="btn btn-primary" asp-controller="Home" asp-action="RecipeDetail" asp-route-id="@Model.RecipeID">Назад</a>
</div>

<div class="collapse mx-auto container card p-3 m-1" id="collapseRedactor">
    <!--Редактирование-->
    <form id="formRecipe" method="post" asp-action="UpdateRecipe" asp-controller="Administration" asp-route-id=@Model.RecipeID enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <partial name="_RecipeForm.cshtml" />

        <!--Загрузка изображений-->
        <h5>Редкатирование изображения</h5>
        <div class="m-3">
            <img class="img-covered img-sm" src="@Url.Content(@Model.Img?.Path)" alt="@Model.Img?.Name" />
        </div>
        <div class="mb-3">
            <input class="form-control" name="file" type="file" />
            <span class="field-validation-valid" data-valmsg-for="file" data-valmsg-replace="true"></span>
        </div>

        <div class="mb-3">
            <input class="btn btn-primary btn-lg btn-block" type="submit" value="Сохранить" />
        </div>

    </form>

    <!--Удаление-->
    <div class="m-3">
        <h5>Удалить рецепт</h5>
        <form asp-action="DeleteRecipe" asp-controller="Administration" asp-route-id=@Model.RecipeID>
            @Html.AntiForgeryToken()
            <input class="btn btn-danger" type="submit" value="Удалить" />
        </form>
    </div>
</div>

<!--ШАГИ-->
@await Html.PartialAsync("_RecipeStepCreateForm.cshtml", new ReciepeStep{RecipeID=@Model.RecipeID} )

<div id="steps">
</div>

@section Scripts
{
<script>
    let InfoModal = new bootstrap.Modal(document.getElementById("infoModal"), {});
    let DeleteYesNoModal = new bootstrap.Modal(document.getElementById("deleteYesNoModal"), {});

    let AjaxSendForm = function(formItem, formData, _url, onSuccess) {
        let IsValid = $(formItem).valid();
        if(IsValid) {
            $.ajax({
                url: _url,
                type: 'POST',
                contentType: false,
                processData: false,
                cache: false,
                data: formData,
                success: function(data) {
                    onSuccess();
                    UpdateSteps();
                }
            });
        }
    }

    $('#createstep').click(function() {
        // Создание шага
        let _url = '@Url.Action("CreateRecipeStep", "Administration")';
        let formData = new FormData();
        let formArr = $('#formCreateRecipeStep').serializeArray();
        let form =  document.getElementById("formCreateRecipeStep");
        formArr.forEach((element) => {formData.append(element.name, element.value)});
        formData.append("file", form.file.files[0]);
        AjaxSendForm(form,
            formData,
            _url,
            function(){
                document.getElementById("formCreateRecipeStep").reset();
                $("#infoModalText").text("Шаг создан");
                InfoModal.show();
            } 
        );
    });

    function ConfirmYesNo(item) {
        // УДАЛЕНИЕ
        DeleteYesNoModal.show();
        $("#btnYesConfirmYesNo").click(function () {
            // Подтверждение удаления
            let _url = '@Url.Action("DeleteRecipeStep", "Administration")';
            let form = item.parentNode.parentNode.parentNode.getElementsByClassName("formsDeleteRecipeStep")[0]
            let formArr = $(form).serializeArray();
            let formData = new FormData();
            formArr.forEach((element) => {formData.append(element.name, element.value)});
            AjaxSendForm(form, formData, _url, function(){DeleteYesNoModal.hide();} );
        });
        $("#btnNoConfirmYesNo").click(function () {
            // Отмена удаления
            DeleteYesNoModal.hide();
        });
    }

    let UpdateSteps = function() {
        // Создание форм и функций для каждого шага
        $.ajax({
            // Получение списка шагов
            url: '@Url.Action("GetStepPartialView", "Administration")',
            type: "get",
            data: {'recipeId' : '@Model.RecipeID'},
            success: function (result) {
                // Вставка шагов на страницу
                $('#steps').html(result);
                // Привязка событий к созданым шагам
                $(".updatesteps").on('click', function() {
                    // Обновление информации о шаге
                    let _url = '@Url.Action("UpdateRecipeStep", "Administration")';
                    let formData = new FormData();
                    let form = this.parentElement.parentElement;
                    let formArr = $(form).serializeArray();
                    formArr.forEach((element) => {formData.append(element.name, element.value)});
                    AjaxSendForm(form,
                        formData,
                        _url,
                        function(){
                            $("#infoModalText").text("Изменения сохранены");
                            InfoModal.show();
                        } 
                    );
                    
                });
                //
                $(".deletesteps").on('click', function() {
                    // Удаление шага
                    ConfirmYesNo(this);
                });
                //
            },
            error: function (xhr, status, error) {
                var msg = "Response failed with status: " + status + "</br>"
                + " Error: " + error;
                $('#steps').html(msg);
            }
        });
    }
    UpdateSteps();
</script>
}

